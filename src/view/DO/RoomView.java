/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.DO;

import controllerl.Util.impl.BillDAO;
import controllerl.Util.impl.BookRoomDAO;
import controllerl.Util.impl.CustomerDAO;
import controllerl.Util.impl.PayBillDAO;
import controllerl.Util.impl.RoomDAO;
import controllerl.Util.impl.UserDAO;
import daoop_qlks_ver1.DatabaseConnector;
import static daoop_qlks_ver1.Main.conn;
import java.sql.PreparedStatement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import model.dto.Bill;
import model.dto.BookRoom;
import model.dto.Customer;
import model.dto.PayBill;
import model.dto.Room;
import model.dto.User;
import view.HomePage;

/**
 *
 * @author Admin
 */
public class RoomView extends javax.swing.JFrame {

    /**
     * Creates new form RoomView
     */
    ArrayList<Bill> listBill;
    ArrayList<PayBill> listPayBill;
    ArrayList<User> listUser;
    ArrayList<Customer> listCustomer;
    ArrayList<Room> listRoom;
    ArrayList<BookRoom> listBookRoom;
    DefaultTableModel tblModel;

    public RoomView() {
        initComponents();
        this.setLocationRelativeTo(null);

        tblModel = (DefaultTableModel) jRoomTable.getModel();
        tblModel.setColumnIdentifiers(new Object[]{
            "RoomID", "RoomName", "IsBooked", "IsUsed", "Floor", "Bed", "Price", "CustomerID", "DateFrom", "DateTo"
        });
        ShowTable();
    }

    public void ShowTable() {
        listBill = new BillDAO().getListBill();
        listPayBill = new PayBillDAO().getLisPaytBill();
        listBookRoom = new BookRoomDAO().getListBookRoom();
        listUser = new UserDAO().getListUser();
        listCustomer = new CustomerDAO().getListCustomer();
        listRoom = new RoomDAO().getListRoom();
        int customerID = 0;
        String dateFrom = "";
        String dateTo = "";
        for (Room r : listRoom) {

            if (r.getIsBooked() == false) {
                tblModel.addRow(new Object[]{
                    r.getRoomID(), r.getRoomName(), r.getIsBooked(), r.getIsUsed(),
                    r.getFloor(), r.getBedNumber(), r.getPrice(), "", "", ""
                });
            } else {
                for (BookRoom br : listBookRoom) {
                    if (br.getRoomID() == r.getRoomID()) {
                        customerID = br.getCustomerID();
                        dateFrom = br.getDateFrom();
                        dateTo = br.getDateFrom();
                    }
                }
                tblModel.addRow(new Object[]{
                    r.getRoomID(), r.getRoomName(), r.getIsBooked(), r.getIsUsed(),
                    r.getFloor(), r.getBedNumber(), r.getPrice(), customerID, dateFrom, dateTo
                });
            }

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jRoomTable = new javax.swing.JTable();
        btnHome = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtRoomName = new javax.swing.JTextField();
        btnFind = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtCustomerID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtDateFrom = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtDateTo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtNewPrice = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtRoomID = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RoomView");

        jRoomTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "RoomID", "RoomName", "IsBooked", "IsUsed", "Floor", "Bed", "Price", "CustomerID", "DateFrom", "DateTo"
            }
        ));
        jRoomTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRoomTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jRoomTable);

        btnHome.setText("homepage");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        jLabel1.setText("RoomName");

        btnFind.setText("Find");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        jLabel2.setText("CustomerID");

        jLabel3.setText("DateFrom");

        jLabel4.setText("DateTo");

        jLabel5.setText("NewPrice");

        jLabel6.setText("RoomID");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnFind)
                                .addGap(18, 18, 18)
                                .addComponent(btnEdit)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnRefresh))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtCustomerID)
                                            .addComponent(txtDateFrom)
                                            .addComponent(txtDateTo)
                                            .addComponent(txtNewPrice)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel6))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtRoomName, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                                            .addComponent(txtRoomID))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 599, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnHome)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtCustomerID, txtRoomName});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnHome)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtRoomID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtRoomName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtCustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtDateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(txtDateTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(txtNewPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnFind)
                            .addComponent(btnRefresh)
                            .addComponent(btnEdit))
                        .addGap(22, 22, 22))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        // TODO add your handling code here:
        dispose();
        HomePage home = new HomePage();
        home.pack();
        home.setLocationRelativeTo(null);
        home.setVisible(true);
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        // TODO add your handling code here:
        tblModel.setRowCount(0);
        int customerID = 0;
        int roomID = 0;
        String dateFrom = "";
        String dateTo = "";
        //if (txtCustomerID.getText().equals("")) {
        if (!txtRoomName.getText().equals("")) {
            for (Room r : listRoom) {
                if (r.getRoomName().equals(txtRoomName.getText())) {
                    if (r.getIsBooked() == false) {
                        tblModel.addRow(new Object[]{
                            r.getRoomID(), r.getRoomName(), r.getIsBooked(), r.getIsUsed(),
                            r.getFloor(), r.getBedNumber(), r.getPrice(), "", "", ""
                        });
                    } else {
                        for (BookRoom br : listBookRoom) {
                            if (br.getRoomID() == r.getRoomID()) {
                                customerID = br.getCustomerID();
                                dateFrom = br.getDateFrom();
                                dateTo = br.getDateFrom();
                                break;
                            }
                        }
                        tblModel.addRow(new Object[]{
                            r.getRoomID(), r.getRoomName(), r.getIsBooked(), r.getIsUsed(),
                            r.getFloor(), r.getBedNumber(), r.getPrice(), customerID, dateFrom, dateTo
                        });
                    }
                    break;
                }
                //System.out.println("Phong khong ton tai");
            }
        } else if (!txtCustomerID.getText().equals("")) {
            customerID = Integer.parseInt(txtCustomerID.getText());
            for (BookRoom br : listBookRoom) {
                if (br.getCustomerID() == customerID) {
                    dateFrom = br.getDateFrom();
                    dateTo = br.getDateTo();
                    roomID = br.getRoomID();
                    break;
                }
            }
            for (Room r : listRoom) {
                if (r.getRoomID() == roomID) {
                    tblModel.addRow(new Object[]{
                        roomID, r.getRoomName(), r.getIsBooked(), r.getIsUsed(),
                        r.getFloor(), r.getBedNumber(), r.getPrice(), customerID, dateFrom, dateTo
                    });
                }
            }
        } else if (!txtDateFrom.getText().equals("") && !txtDateTo.equals("")) {
            dateFrom = txtDateFrom.getText();
            dateTo = txtDateTo.getText();
            String dateFrom2 = "";
            String dateTo2 = "";
            Date date3;
            Date date4;
            try {
                Date date1 = new SimpleDateFormat("dd/MM/yyyy").parse(dateFrom);
                Date date2 = new SimpleDateFormat("dd/MM/yyyy").parse(dateTo);

                for (BookRoom br : listBookRoom) {
                    if (br.getIsPaid() == 0) {
                        date3 = new SimpleDateFormat("yyyy-MM-dd").parse(br.getDateFrom());
                        date4 = new SimpleDateFormat("yyyy-MM-dd").parse(br.getDateTo());
                        if (date1.after(date4) || date3.after(date2)) {
                            roomID = br.getRoomID();
                            for (Room r : listRoom) {
                                if (r.getRoomID() == roomID) {
                                    tblModel.addRow(new Object[]{
                                        r.getRoomID(), r.getRoomName(), r.getIsBooked(), r.getIsUsed(),
                                        r.getFloor(), r.getBedNumber(), r.getPrice(), "", "", ""
                                    });
                                }
                            }
                        }
                    }
                }
                for (Room r : listRoom) {
                    if (r.getIsBooked() == false) {
                        tblModel.addRow(new Object[]{
                            r.getRoomID(), r.getRoomName(), r.getIsBooked(), r.getIsUsed(),
                            r.getFloor(), r.getBedNumber(), r.getPrice(), "", "", ""
                        });
                    }
                }
            } catch (ParseException ex) {
                Logger.getLogger(RoomView.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_btnFindActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        tblModel.setRowCount(0);
        txtCustomerID.setText("");
        txtRoomName.setText("");
        txtDateFrom.setText("");
        txtDateTo.setText("");
        txtRoomID.setText("");
        txtNewPrice.setText("");
        ShowTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        for (Room r : listRoom) {
            if (r.getRoomID() == Integer.parseInt(txtRoomID.getText())) {
                System.out.println("Da vao");
                String sql = "UPDATE tblRoom SET price = ? "
                        + " WHERE roomID = ?";
                try {
                    conn = DatabaseConnector.getSQLServerConnection();
                    PreparedStatement ps = conn.prepareStatement(sql);
                    ps.setInt(1, Integer.parseInt(txtNewPrice.getText()));
                    ps.setInt(2, Integer.parseInt(txtRoomID.getText()));
                    ps.executeUpdate();
                } catch (Exception exception) {
                    exception.printStackTrace();
                }
            }
        }

    }//GEN-LAST:event_btnEditActionPerformed

    private void jRoomTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRoomTableMouseClicked
        // TODO add your handling code here:
        System.out.println("hahaha " + tblModel);
        JTable jTable = (JTable) jRoomTable.getModel();


    }//GEN-LAST:event_jRoomTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RoomView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RoomView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RoomView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RoomView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RoomView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTable jRoomTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtCustomerID;
    private javax.swing.JTextField txtDateFrom;
    private javax.swing.JTextField txtDateTo;
    private javax.swing.JTextField txtNewPrice;
    private javax.swing.JTextField txtRoomID;
    private javax.swing.JTextField txtRoomName;
    // End of variables declaration//GEN-END:variables
}
