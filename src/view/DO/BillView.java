/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.DO;

import controllerl.Util.impl.BillDAO;
import controllerl.Util.impl.BookRoomDAO;
import controllerl.Util.impl.CustomerDAO;
import controllerl.Util.impl.PayBillDAO;
import controllerl.Util.impl.RoomDAO;
import controllerl.Util.impl.UserDAO;
import daoop_qlks_ver1.DatabaseConnector;
import static daoop_qlks_ver1.Main.conn;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.dto.Bill;
import model.dto.BookRoom;
import model.dto.Customer;
import model.dto.PayBill;
import model.dto.Room;
import model.dto.User;
import view.HomePage;

/**
 *
 * @author Admin
 */
public class BillView extends javax.swing.JFrame {

    /**
     * Creates new form BillView
     */
    ArrayList<Bill> listBill;
    ArrayList<PayBill> listPayBill;
    ArrayList<User> listUser;
    ArrayList<Customer> listCustomer;
    ArrayList<Room> listRoom;
    ArrayList<BookRoom> listBookRoom;
    DefaultTableModel model4;
    public static int CID;
    public static int RID;

    public BillView() {
        initComponents();
        this.setLocationRelativeTo(null);

        model4 = (DefaultTableModel) jTable1.getModel();
        model4.setColumnIdentifiers(new Object[]{
            "PayBillID", "BillID", "CustomerID", "RoomID", "TotalPrice", "DatePay"
        });
        ShowTable();
    }

    public int maxOf(int a, int b, int c) {
        if (a > b) {
            if (a > c) {
                return a;
            }
            return c;
        } else if (a <= b) {
            if (b > c) {
                return b;
            }
            return c;
        }
        return 0;
    }

    public void ShowTable() {
        listBill = new BillDAO().getListBill();
        listPayBill = new PayBillDAO().getLisPaytBill();
        listBookRoom = new BookRoomDAO().getListBookRoom();
        listUser = new UserDAO().getListUser();
        listCustomer = new CustomerDAO().getListCustomer();
        listRoom = new RoomDAO().getListRoom();
        for (PayBill pb : listPayBill) {
            for (Bill b : listBill) {
                if (pb.getBillID() == b.getBillID()) {
                    model4.addRow(new Object[]{
                        pb.getPayBillID(), b.getBillID(), b.getCustomerID(), pb.getRoomID(), b.getTotalPrice(), b.getDatePay()
                    });
                }
            }
        }
        for (User u : listUser) {
            if (u.getIsLogin() == true) {
                txtUserID.setText(String.valueOf(u.getUserID()));
                //System.out.println("l");
            }
        }
        int iPrice = maxOf(RoomViewFloor1.price, RoomViewFloor2.price2, RoomViewFloor3.price3);
        int iRoomID = maxOf(RoomViewFloor1.roomID, RoomViewFloor2.roomID2, RoomViewFloor3.roomID3);
        txtTotalPrice.setText(Integer.toString(iPrice));
        txtRoomID.setText(Integer.toString(iRoomID));
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        Date date = new Date();
        txtDatePay.setText(dateFormat.format(date));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtCustomerIndentity = new javax.swing.JTextField();
        txtRoomID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtTotalPrice = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtUserID = new javax.swing.JTextField();
        txtDatePay = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnHome = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        btnFind = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BillView");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PayBillID", "BillID", "CustomerID", "RoomID", "TotalPrice", "DatePay"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("customer's Indentity number");

        jLabel2.setText("roomID");

        jLabel3.setText("totalPrice");

        jLabel4.setText("userID");

        jLabel5.setText("DatePay");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnHome.setText("homePage");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnPrint.setText("Print");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        btnFind.setText("Find");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnHome)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAdd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnReset)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnFind, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnPrint))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtDatePay, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtUserID, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtRoomID, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtCustomerIndentity, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnHome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCustomerIndentity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtRoomID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtUserID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtDatePay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAdd)
                            .addComponent(btnReset)
                            .addComponent(btnPrint)
                            .addComponent(btnFind))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        Bill bill = new Bill();
        PayBill payBill = new PayBill();
        for (Customer c : listCustomer) {
            if (c.getIndentityNumber().equals(txtCustomerIndentity.getText())) {
                bill.setCustomerID(c.getCustomerID());
                CID = c.getCustomerID();
            }
        }

        bill.setTotalPrice(Integer.parseInt(txtTotalPrice.getText()));
        bill.setUserID(Integer.parseInt(txtUserID.getText()));
        bill.setDatePay(txtDatePay.getText());

        if (new BillDAO().addBill(bill)) {
            listBill.add(bill);
            JOptionPane.showMessageDialog(rootPane, "Add bill success");
        } else {
            JOptionPane.showMessageDialog(rootPane, "Add bill fail");
        }
        listBill = new BillDAO().getListBill();
        payBill.setBillID(listBill.get(listBill.size() - 1).getBillID());
        //CID = payBill.getBillID();
        //System.out.println(CID);
        payBill.setRoomID(Integer.parseInt(txtRoomID.getText()));
        if (new PayBillDAO().addPayBill(payBill)) {
            listPayBill.add(payBill);
            for (BookRoom br : listBookRoom) {
                if (br.getIsPaid() == 0 && br.getRoomID() == Integer.parseInt(txtRoomID.getText())) {
                    String sql = "UPDATE tblBookRoom SET isPaid = 1 WHERE roomID = ?";
                    Connection conn;
                    try {
                        conn = DatabaseConnector.getSQLServerConnection();
                        PreparedStatement stmt = conn.prepareStatement(sql);
                        stmt.setInt(1, br.getRoomID());
                        stmt.execute();
                    } catch (SQLException | ClassNotFoundException ex) {
                        Logger.getLogger(RoomViewFloor1.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            JOptionPane.showMessageDialog(rootPane, "Add paybill success");
        } else {
            JOptionPane.showMessageDialog(rootPane, "Add paybill fail");
        }

        model4.setRowCount(0);
        ShowTable();

    }//GEN-LAST:event_btnAddActionPerformed


    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        model4.setRowCount(0);
        ShowTable();
        txtCustomerIndentity.setText("");
        txtDatePay.setText("");
        txtUserID.setText("");
        txtRoomID.setText("");
        txtTotalPrice.setText("");
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        // TODO add your handling code here:
        dispose();
        HomePage homePage = new HomePage();
        homePage.pack();
        homePage.setLocationRelativeTo(null);
        homePage.setVisible(true);
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        // TODO add your handling code here:
        model4.setRowCount(0);
        for (Customer c : listCustomer) {
            if (c.getIndentityNumber().equals(txtCustomerIndentity.getText())) {
                for (Bill b : listBill) {
                    if (b.getCustomerID() == c.getCustomerID() && b.getIsPrinted() == false) {
                        for (PayBill pb : listPayBill) {
                            if (pb.getBillID() == b.getBillID()) {
                                String sql = "UPDATE tblBill SET isPrinted = 1 "
                                        + " WHERE billID = ?";
                                try {
                                    conn = DatabaseConnector.getSQLServerConnection();
                                    PreparedStatement ps = conn.prepareStatement(sql);
                                    ps.setInt(1, b.getBillID());
                                    ps.executeUpdate();
                                } catch (Exception exception) {
                                    exception.printStackTrace();
                                }
                                model4.addRow(new Object[]{
                                    pb.getPayBillID(), b.getBillID(), b.getCustomerID(), pb.getRoomID(),
                                    b.getTotalPrice(), b.getDatePay()
                                });
                                break;
                            }
                        }
                        break;
                    }
                }
            }
        }

    }//GEN-LAST:event_btnPrintActionPerformed

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        // TODO add your handling code here:
        model4.setRowCount(0);
        for (PayBill pb : listPayBill) {
            for (Bill b : listBill) {
                try {
                    Date date4 = new SimpleDateFormat("yyyy-MM-dd").parse(b.getDatePay());
                    Date date1 = new SimpleDateFormat("dd/MM/yyyy").parse(txtDatePay.getText());
                    if (date1.compareTo(date4) == 0) {
                        if (pb.getBillID() == b.getBillID()) {
                            model4.addRow(new Object[]{
                                pb.getPayBillID(), b.getBillID(), b.getCustomerID(), pb.getRoomID(), b.getTotalPrice(), b.getDatePay()
                            });
                        }
                    }
                } catch (ParseException ex) {
                    Logger.getLogger(BillView.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnFindActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BillView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BillView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BillView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BillView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BillView().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnReset;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtCustomerIndentity;
    private javax.swing.JTextField txtDatePay;
    private javax.swing.JTextField txtRoomID;
    private javax.swing.JTextField txtTotalPrice;
    private javax.swing.JTextField txtUserID;
    // End of variables declaration//GEN-END:variables
}
