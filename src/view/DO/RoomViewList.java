/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.DO;

import controllerl.Util.impl.BillDAO;
import controllerl.Util.impl.BookRoomDAO;
import controllerl.Util.impl.CustomerDAO;
import controllerl.Util.impl.PayBillDAO;
import controllerl.Util.impl.RoomDAO;
import controllerl.Util.impl.UserDAO;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import model.dto.Bill;
import model.dto.BookRoom;
import model.dto.Customer;
import model.dto.PayBill;
import model.dto.Room;
import model.dto.User;
import view.HomePage;

/**
 *
 * @author Admin
 */
public class RoomViewList extends javax.swing.JFrame {

    /**
     * Creates new form RoomViewList
     */
    ArrayList<Bill> listBill;
    ArrayList<PayBill> listPayBill;
    ArrayList<User> listUser;
    ArrayList<Customer> listCustomer;
    ArrayList<Room> listRoom;
    ArrayList<BookRoom> listBookRoom;
    //DefaultComboBoxModel comboBoxModel;
    DefaultTableModel tblModel;
    static int RID = 0;

    public RoomViewList() {
        initComponents();
        this.setLocationRelativeTo(null);

        tblModel = (DefaultTableModel) jTable2.getModel();
        tblModel.setColumnIdentifiers(new Object[]{
            "RoomID", "RoomName", "IsBooked", "IsUsed", "Floor", "Bed", "Price", "CustomerID", "DateFrom", "DateTo"
        });

        init();

    }

    public void init() {
        listBill = new BillDAO().getListBill();
        listPayBill = new PayBillDAO().getLisPaytBill();
        listBookRoom = new BookRoomDAO().getListBookRoom();
        listUser = new UserDAO().getListUser();
        listCustomer = new CustomerDAO().getListCustomer();
        listRoom = new RoomDAO().getListRoom();
        int customerID = 0;
        String dateFrom = "";
        String dateTo = "";
        //comboBoxModel = new DefaultComboBoxModel();
        for (Room r : listRoom) {

            if (r.getIsBooked() == false) {
                tblModel.addRow(new Object[]{
                    r.getRoomID(), r.getRoomName(), r.getIsBooked(), r.getIsUsed(),
                    r.getFloor(), r.getBedNumber(), r.getPrice(), "", "", ""
                });
            } else {
                for (BookRoom br : listBookRoom) {
                    if (br.getRoomID() == r.getRoomID()) {
                        customerID = br.getCustomerID();
                        dateFrom = br.getDateFrom();
                        dateTo = br.getDateFrom();
                    }
                }
                tblModel.addRow(new Object[]{
                    r.getRoomID(), r.getRoomName(), r.getIsBooked(), r.getIsUsed(),
                    r.getFloor(), r.getBedNumber(), r.getPrice(), customerID, dateFrom, dateTo
                });
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        btnClearRoom = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnBookedRoom = new javax.swing.JButton();
        btnHome = new javax.swing.JButton();
        txtRoomID = new javax.swing.JTextField();
        btnNext = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RoomViewList");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "RoomID", "RoomName", "IsBooked", "IsUsed", "Floor", "Bed", "Price", "CustomerID", "DateFrom", "DateTo"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        btnClearRoom.setText("ClearRoom");
        btnClearRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearRoomActionPerformed(evt);
            }
        });

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnBookedRoom.setText("BookedRoom");
        btnBookedRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookedRoomActionPerformed(evt);
            }
        });

        btnHome.setText("HomePage");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnClearRoom)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRefresh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBookedRoom))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(txtRoomID, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(btnNext))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnHome)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnHome)
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtRoomID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNext))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnClearRoom)
                            .addComponent(btnRefresh)
                            .addComponent(btnBookedRoom)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        // TODO add your handling code here:
        dispose();
        HomePage homePage = new HomePage();
        homePage.pack();
        homePage.setLocationRelativeTo(null);
        homePage.setVisible(true);
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnClearRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearRoomActionPerformed
        // TODO add your handling code here:
        tblModel.setRowCount(0);
        for (Room r : listRoom) {
            if (r.getIsBooked() == false) {
                tblModel.addRow(new Object[]{
                    r.getRoomID(), r.getRoomName(), r.getIsBooked(), r.getIsUsed(),
                    r.getFloor(), r.getBedNumber(), r.getPrice(), "", "", ""
                });
            }
        }
    }//GEN-LAST:event_btnClearRoomActionPerformed

    private void btnBookedRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookedRoomActionPerformed
        // TODO add your handling code here:
        int customerID = 0;
        String dateFrom = "";
        String dateTo = "";
        tblModel.setRowCount(0);
        for (Room r : listRoom) {
            if (r.getIsBooked() == true) {
                for (BookRoom br : listBookRoom) {
                    if (br.getRoomID() == r.getRoomID()) {
                        customerID = br.getCustomerID();
                        dateFrom = br.getDateFrom();
                        dateTo = br.getDateFrom();
                    }
                }
                tblModel.addRow(new Object[]{
                    r.getRoomID(), r.getRoomName(), r.getIsBooked(), r.getIsUsed(),
                    r.getFloor(), r.getBedNumber(), r.getPrice(), customerID, dateFrom, dateTo
                });
            }
        }
    }//GEN-LAST:event_btnBookedRoomActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        tblModel.setRowCount(0);
        init();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        if (!txtRoomID.getText().equals("")) {
            RID = Integer.parseInt(txtRoomID.getText());
            if (RID < 4) {
                dispose();
                RoomViewFloor1 roomview1 = new RoomViewFloor1();
                roomview1.pack();
                roomview1.setLocationRelativeTo(null);
                roomview1.setVisible(true);
            } else if (RID < 7) {
                dispose();
                RoomViewFloor2 roomview2 = new RoomViewFloor2();
                roomview2.pack();
                roomview2.setLocationRelativeTo(null);
                roomview2.setVisible(true);
            } else {
                dispose();
                RoomViewFloor3 roomview3 = new RoomViewFloor3();
                roomview3.pack();
                roomview3.setLocationRelativeTo(null);
                roomview3.setVisible(true);
            }
        } else {
            dispose();
            RoomViewFloor1 roomview1 = new RoomViewFloor1();
            roomview1.pack();
            roomview1.setLocationRelativeTo(null);
            roomview1.setVisible(true);
        }
    }//GEN-LAST:event_btnNextActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RoomViewList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RoomViewList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RoomViewList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RoomViewList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RoomViewList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBookedRoom;
    private javax.swing.JButton btnClearRoom;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField txtRoomID;
    // End of variables declaration//GEN-END:variables
}
